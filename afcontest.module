<?php

// http://api.drupal.org/api/drupal/developer!hooks!node.php/function/hook_node_info/6
function afcontest_node_info() {
    return array(
        'afcontest' => array(
            'name' => 'Soutěž',
            'module' => 'afcontest',
            'description' => 'Animefestí soutěž, automaticky si vytvoří potřebné formuláře a galerii.',
            'title_label' => 'Název',
            'has_body' => FALSE
        )
        
    );
}

function afcontest_form(&$node, $form_state) {
    global $user;

    $admin = user_access('administer nodes');
    
    $type = node_get_types('type', $node);

    $form = array(
        '#cache' => TRUE,
    );

    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => check_plain($type->title_label),
      '#required' => TRUE,
      '#default_value' => $node->title,
      '#weight' => -5,
    );
    $form['slug'] = array(
        '#type' => 'textfield', 
        '#title' => 'Slug (URL zkratka bez hacku, carek a mezer)', 
        '#default_value' => $node->slug, 
        '#maxlength' => 25,
    );
    $form['year'] = array(
        '#type' => 'textfield', 
        '#title' => 'Rok', 
        '#default_value' => $node->year, 
        '#maxlength' => 4
    );

    $form['title_page'] = array(
        '#type' => 'textfield', 
        '#title' => 'Titulni stranka (node ID)', 
        '#default_value' => ( $node->title_page ? $node->title_page : "0"), 
        '#maxlength' => 4
    );
    $form['submit_form'] = array(
        '#type' => 'textfield', 
        '#title' => 'Formular pro odesilani prispevku (node ID)', 
        '#default_value' => ( $node->submit_form ? $node->submit_form : "0"), 
        '#maxlength' => 4
    );
    $form['gallery'] = array(
        '#type' => 'textfield', 
        '#title' => 'Galerie (node ID)', 
        '#default_value' => ( $node->gallery ? $node->gallery : "0"), 
        '#maxlength' => 4
    );
    $form['vote_form'] = array(
        '#type' => 'textfield', 
        '#title' => 'Formular pro hlasovani (node ID)', 
        '#default_value' => ( $node->vote_form ? $node->vote_form : "0"), 
        '#maxlength' => 4
    );
    $form['results_page'] = array(
        '#type' => 'textfield', 
        '#title' => 'Stranka s vysledky (node ID)', 
        '#default_value' => ( $node->results_page ? $node->results_page : "0"), 
        '#maxlength' => 4
    );
    return $form;
}

/**
 * Implementation of hook_load().
 */
function afcontest_load($node) {
  global $user;
  $afcontest = db_fetch_object(db_query("SELECT * FROM {afcontest} WHERE nid = %d", $node->nid));
  return $afcontest;
}

/**
 * Implementation of hook_insert().
 */
function afcontest_insert($node) {
  db_query("INSERT INTO {afcontest} (nid, year, slug) VALUES (%d, '%s', '%s')", $node->nid, $node->year, $node->slug);

  //afcontest_add_new();
  afcontest_add_new( $node );
}

/**
 * Implementation of hook_view().
 *
 * @param $block
 *   An extra parameter that adapts the hook to display a block-ready
 *   rendering of the afcontest.
 */
function afcontest_view($node, $teaser = FALSE, $page = FALSE, $block = FALSE) {
  global $user;

  if ( $node->comment > 0 ) {
      $node->comment = 0;
      node_save( $node );
  }

  if ( $_GET['action'] == "init" ) {
      $node = afcontest_add_new( $node );
  } else if ( $_GET['action'] == "create_gallery" ) {
      $node = afcontest_create_gallery( $node );
  } else if ( $_GET['action'] == "create_voting" ) {
      $node = afcontest_create_voting( $node );
  } else if ( $_GET['action'] == "create_results" ) {
      $node = afcontest_create_results( $node );
  }

  $output = '<p>Název: '.$node->title.'</br>Rok: '.$node->year.'</br>Slug: '.$node->slug.'</p>';

  $phase = -1;
  if ( $node->title_page == 0 ) {
      $phase = 0;
  } else if ( $node->gallery == 0 ) {
      $phase = 1;
  } else if ( $node->vote_form == 0 ) {
      $phase = 2;
  } else if ( $node->results_page == 0 ) {
      $phase = 3;
  } else
      $phase = 4;

  //$output .= "<p>phase: ".$phase."</p>";
  //$output .= afcontest_create_vote_form($node, array( "001: jarnik", "003: kokodak", "004: papinak" ) );
  //$output .= print_r( afcontest_get_pictures( 1536 ), true );
  //$output .= print_r( afcontest_count_votes( 1560, afcontest_get_pictures( 1556 ) ), true );

  if ( $phase <= 0 ) {
      $output .= '<p class="links"><a href="?action=init">INIT</a></p>';
  } else {
      $url_title_page = '/souteze/'.$node->slug.'/'.$node->year; // vytvori alias, ale nezmeni vlastnost samotneho node-u
      $output .= '<h3>Titulní stránka: <a href="'.$url_title_page.'">'.$url_title_page.'</a></h3>';
      $url_submit_form = "/souteze/".$node->slug."/".$node->year."/odeslani";
      $output .= '<h3>Formulář pro odesílání příspěvků: <a href="'.$url_submit_form.'">'.$url_submit_form.'</a></h3>';

      if ( $phase <= 1 ) {
         $output .= '<p class="links"><a href="?action=create_gallery">Stopnout příjem příspěvků a vytvořit z nich galerii</a></p>';
      } else {
         $url_gallery = "/souteze/".$node->slug."/".$node->year."/galerie";
         $output .= '<h3>Galerie: <a href="'.$url_gallery.'">'.$url_gallery.'</a></h3>';

         if ( $phase <= 2 ) {
            $output .= '<p class="links"><a href="?action=create_voting">Vytvořit podle galerie hlasovací formulář</a></p>';
         } else {
            $url_vote_form = "/souteze/".$node->slug."/".$node->year."/hlasovani";
            $output .= '<h3>Hlasovací formulář: <a href="'.$url_vote_form.'">'.$url_vote_form.'</a></h3>';

            if ( $phase <= 3 ) {
                $output .= '<p class="links"><a href="?action=create_results">Stopnout hlasování, srovnat galerii podle výsledků, vytvořit stránku výsledků</a></p>';
            } else {
                $url_results_page = "/souteze/".$node->slug."/".$node->year."/vysledky";
                $output .= '<h3>Výsledky: <a href="'.$url_results_page.'">'.$url_results_page.'</a></h3>';
            }
         }
      }
  }

  //$l = node_load( 1322 );
  //$output .= print_r($l, true);

  $node->content['body'] = array(
    '#value' => $output
  );
  return $node;
}

// ------ PHASE 0 --- CREATE SUBMISSION FORM AND TITLE PAGE -----------------------------------------------------------

function afcontest_create_submit_form($file_save_dir, $node) {
  $components = array();
  $components[1] = array(
    'cid' => 1,
    'pid' => 0,
    // I don't trust the admin to make a key based on input :)
    'form_key' => 'fotka',
    'name' => "Fotka",
    // I want all lines to be numeric type component.
    'type' => 'file',
    'extra' => array(
      'filtering' => array (
        'types' => array('jpg','png'),
        'size' => 800
      ),
      'savelocation' => $file_save_dir
    ),
    'mandatory' => '1',
    'weight' => 0,
    'page_num' => 1
  );

  $n = array(
    'type' => 'webform',
    'uid' => $node->uid,
    'title' => $node->title." ".$node->year." - Odeslání fotky",
    'name' => $node->title." ".$node->year." - Odeslání fotky",
    'language' => 'cs',
    'promote' => 0,
    'status' => 0,
    'comment' => 0,
    'path' => "souteze/".$node->slug."/".$node->year."/odeslani",
    'webform' => array(
        'confirmation' => '<p>Děkujeme za zaslání fotky. Soutěž potrvá do <strong>XX. XX XXXX</strong>.</p>',
        'confirmation_format' => 1,
        'redirect_url' => '<confirmation>',
        'status' => '1',
        'block' => '0',
        'teaser' => '0',
        'allow_draft' => '0',
        'auto_save' => '0',
        'submit_notice' => '1',
        'submit_text' => 'Odeslat fotku',
        // Users can only submit once how many kittens they want.
        'submit_limit' => '2',
        'submit_interval' => '-1',
        'total_submit_limit' => '-1',
        'total_submit_interval' => '-1',
        'record_exists' => TRUE,
        'roles' => array(
          // Only authenticated users can submit this webform.
          0 => '2',
        ),
        'emails' => array(),
        // Here comes our $components array.
        'components' => $components,
      ),
  );
   if ( $n = node_submit( $n ) ) {
      $n->uid = $node->uid;
      node_save( $n );
      drupal_set_message("Vytvořen formulář ".$n->title.".");
  } else
      drupal_set_message("Node ".$node->title." added incorrectly", "error");
  return $n;
}

function afcontest_add_new($node) {
  // create FTP dir
  $file_save_dir = $node->slug.$node->year;
  mkdir($_SERVER['DOCUMENT_ROOT'].base_path().'sites/default/files/webform/'.$file_save_dir);

  $form_node = afcontest_create_submit_form($file_save_dir, $node);

  // create dummy page
  $title_page = array(
    'title' => $node->title,
    'language' => 'cs',
    'type' => 'page',
    'promote' => 0,
    'status' => 0,
    'comment' => 0,
    'format' => 3,
    'uid' => $node->uid,
    'body' => '

    <center>
        <p><img alt="'.$node->title.'" src="/sites/default/files/FestovniVajicka.png " style="width: 583px; height: 136px; " /></p>
</center>
<p>Motivační text k soutěži....</p>
<h3>O co jde?</h3>
<p>podrobnější popis</p>
<h3>Pravidla</h3>
<ul>
    <li>do soutěže můžete zaslat maximálně 2 fotky</li>
    <li>musíte být autorem díla a fotky (fotku ale může zaslat pouze jeden ze spoluautorů)</b></li>
    <li>nesmí se jednat o fotomontáž, korekce jasu a ořezy jsou povoleny</li>
    <li>maximální rozměry jsou 1024x768, povolené formáty JPG a PNG</li>
    <li>příspěvky můžete posílat do <strong>10. dubna 2012</strong></li>
</ul>
<p class="links"><a href="/souteze/'.$node->title.'/'.$node->year.'/odeslani">Odeslat fotku</a></p><p>&nbsp;</p>
<h3>Co můžete vyhrát?</h3>
<p>popis cen...</p>
'
    ,
    'name' => $node->title,
    'path' => 'souteze/'.$node->slug.'/'.$node->year // vytvori alias, ale nezmeni vlastnost samotneho node-u
    // TODO - nenechat vytvorit alias, ale zmenit primo u node-u
  );  
  if ( $title_page = node_submit( $title_page ) ) {
      $title_page->uid = $node->uid;
      node_save( $title_page );
      drupal_set_message("Vytvořena stránka ".$node->title.".");
  } else
      drupal_set_message("Node ".$node->title." added incorrectly", "error");

  // create entry submission form

  db_query('UPDATE {afcontest} SET title_page = %d, submit_form = %d  WHERE nid = %d', $title_page->nid, $form_node->nid, $node->nid);

}

/**
 * Implementation of hook_update().
 */
function afcontest_update($node) {
  // Update afcontest settings.
  db_query('UPDATE {afcontest} SET year = "%s", slug = "%s", title_page = %d, submit_form = %d, gallery = %d, vote_form = %d, results_page = %d WHERE nid = %d', 
    $node->year, $node->slug, $node->title_page, $node->submit_form, $node->gallery, $node->vote_form, $node->results_page,
    $node->nid);
}

/**
 * Implementation of hook_delete().
 */
function afcontest_delete($node) {
  db_query("DELETE FROM {afcontest} WHERE nid = %d", $node->nid);
}

// ------ PHASE 1 --- STOP SUBMISSION FORM, CREATE GALLERY FROM SUBMITTED PICTURES -----------------------------------------------------------

function afcontest_add_gallery( $node ) {
  $n = array(
    'type' => 'album',
    'uid' => $node->uid,
    'title' => $node->title." ".$node->year." - Galerie",
    'name' => $node->title." ".$node->year." - Galerie",
    'language' => 'cs',
    'promote' => 0,
    'format' => 1,
    'status' => 0,
    'comment' => 0,
    'path' => "souteze/".$node->slug."/".$node->year."/galerie",
    'webform' => array(
    )
  );
   if ( $n = node_submit( $n ) ) {
      $n->uid = $node->uid;
      node_save( $n );
      drupal_set_message("Vytvořena galerie ".$n->title.".");
  } else
      drupal_set_message("Node ".$node->title." added incorrectly", "error");
  return $n;
}

function afcontest_get_submission_files( $form_nid ) {
  $query = 'SELECT s.*, sd.cid, sd.no, sd.data, u.name, u.status, f.filename, f.filepath '.
           'FROM {webform_submissions} s '.
           'LEFT JOIN {webform_submitted_data} sd ON sd.sid = s.sid '.
           'LEFT JOIN {users} u ON u.uid = s.uid '.
           'LEFT JOIN {files} f ON sd.data = f.fid '.
           'WHERE sd.nid = %d';
  $query .= ' ORDER BY sid ASC, cid ASC, no ASC';
  $res = db_query($query, $form_nid );

  $files = array();
  while ($row = db_fetch_object($res))
      $files[] = $row;   

  return $files;
}

function afcontest_copy_files_to_gallery( $form_nid, $gallery_node ) {
   $album = db_fetch_object(db_query("SELECT path FROM {gallerix_albums} WHERE nid = %d", $gallery_node->nid));
   $album_path = $_SERVER['DOCUMENT_ROOT'].base_path().$album->path."/original/";

   $files = afcontest_get_submission_files( $form_nid );
   $submissions = array();
   $timestamp = time();
   $uid = strval($gallery_node->uid*1);
   foreach ( $files as $k=>$v ) {
       // zkopirovat soubory do adresare galerie
       $filename = sprintf("%03d_%s_%s", ($k+1), $v->name, pathinfo( $v->filename, PATHINFO_BASENAME ) );
       copy( 
         $_SERVER['DOCUMENT_ROOT'].base_path().$v->filepath,
         $album_path.$filename
       );
       // pridat zaznamy do tabulky alba 
       db_query("INSERT INTO {gallerix_pictures} (nid, uid, path, name, caption, original_name, created, added, built ) VALUES (%d, %d, '%s', '%s', '%s', '%s', %d, %d, %d)", 
           $gallery_node->nid, $uid, substr($album->path,1)."/original/".$filename, $filename, str_pad($k+1,3,"0",STR_PAD_LEFT).": ".$v->name, $filename, $timestamp, $timestamp, 0 );

       $submissions[ $k+1 ] = $v->name;
   }

   return $submissions;
}

function afcontest_create_gallery( $node ) {
    db_query('UPDATE {webform} SET status = 0 WHERE nid = %d', $node->submit_form );

    // create node gallery node
    $gnode = afcontest_add_gallery( $node );

    // copyt & add submitted images to new gallery
    afcontest_copy_files_to_gallery( $node->submit_form, $gnode );

    db_query('UPDATE {afcontest} SET gallery = %d WHERE nid = %d', $gnode->nid, $node->nid);
    $node->gallery = $gnode->nid;

    return $node;
}

// ------ PHASE 2 --- PREPARE VOTING FROM MODERATED GALLERY -----------------------------------------------------------------------------

function afcontest_create_vote_form($node, $items) {

  $items_formatted = "";
  foreach ( $items as $i ) {
     $parts = explode(":", $i);
     $items_formatted[] = intval($parts[0])."|".$i; //1|01: hAnko
  }
  $items_formatted = implode("\n",$items_formatted);
    
  $components = array();
  for ( $i = 1; $i < 4; $i++ ) {
    $components[$i] = array(
      'cid' => $i,
      'pid' => 0,
      // I don't trust the admin to make a key based on input :)
      'form_key' => $i.'_misto',
      'name' => $i.". místo",
      // I want all lines to be numeric type component.
      'type' => 'select',
      'extra' => array(
        'items' => $items_formatted,
        'multiple' => 0,
        'aslist' => 1,
      ),
      'mandatory' => '1',
      'weight' => 0,
      'page_num' => 1
    );
    }

  $n = array(
    'type' => 'webform',
    'uid' => $node->uid,
    'title' => $node->title." ".$node->year." - Hlasování",
    'name' => $node->title." ".$node->year." - Hlasování",
    'language' => 'cs',
    'promote' => 0,
    'status' => 0,
    'comment' => 0,
    'path' => "souteze/".$node->slug."/".$node->year."/hlasovani",
    'format' => 3,
    'webform' => array(
        'confirmation' => '<p>Děkujeme za váš hlas!</p>',
        'confirmation_format' => 1,
        'redirect_url' => '<confirmation>',
        'status' => '1',
        'block' => '0',
        'teaser' => '0',
        'allow_draft' => '0',
        'auto_save' => '0',
        'submit_notice' => '1',
        'submit_text' => 'Odeslat',
        'submit_limit' => '1',
        'submit_interval' => '-1',
        'total_submit_limit' => '-1',
        'total_submit_interval' => '-1',
        'record_exists' => TRUE,
        'roles' => array(
          // Only authenticated users can submit this webform.
          0 => '2',
        ),
        'emails' => array(),
        // Here comes our $components array.
        'components' => $components,
      ),
    'body' => '
    <p>Do X. ročníku soutěže '.$node->title.' přišlo <strong>'.count($items).'</strong> fotek, o jejichž výsledném pořadí můžete právě teď rozhodnout</p>

    <p>V následující galerii jsou fotky označeny soutěžními čísly, hlasovací formulář je ve spodní části stránky. Pro každé místo vyberte jednu fotku.</p>

    <p>Bodování je následující:</p>
    <ul>
        <li>1. místo - <strong>5 bodů</strong></li>
        <li>2. místo - <strong>3 body</strong></li>
        <li>3. místo - <strong>1 bod</strong></li>
    </ul>
    <p>O výsledném pořadí rozhodne součet všech bodů. Hlasování probíhá od <strong>XXX do XXX</strong></p>
    [[nid:'.$node->gallery.']]
    '      
  );
   if ( $n = node_submit( $n ) ) {
      $n->uid = $node->uid;
      node_save( $n );
      drupal_set_message("Vytvořen formulář ".$n->title.".");
        
      db_query("INSERT INTO {webform_validation_rule} (rulename, nid, validator) VALUES ('%s', %d, '%s')", 'Unique', $n->nid, 'unique' );

      $valid_rule = db_fetch_object(db_query("SELECT ruleid FROM {webform_validation_rule} WHERE nid = %d", $n->nid));
      for ( $i = 1; $i < 4; $i++ )
        db_query("INSERT INTO {webform_validation_rule_components} (ruleid, cid) VALUES (%d, %d)", $valid_rule->ruleid, $i );

  } else
      drupal_set_message("Node ".$node->title." added incorrectly", "error");
  return $n;
}
    
function afcontest_get_pictures( $gallery_nid ) {
    $pictures = array();
    $res = db_query("SELECT caption FROM {gallerix_pictures} WHERE nid = %d ORDER BY caption", $gallery_nid );
    while ($row = db_fetch_object($res)) {
        $pictures[] = $row->caption;
    }
    return $pictures;
}

function afcontest_create_voting( $node ) {

    $pictures = afcontest_get_pictures( $node->gallery );

    // vytvorit hlasovaci formular
    // vlozit do nej galerii
    $fnode = afcontest_create_vote_form( $node, $pictures );

    db_query('UPDATE {afcontest} SET vote_form = %d WHERE nid = %d', $fnode->nid, $node->nid);
    $node->vote_form = $fnode->nid;

    return $node;
}

// ------ PHASE 3 --- STOP VOTING, COUNT VOTES, REORDER GALLERY -----------------------------------------------------------------------------

function afcontest_count_votes( $form_nid, $pictures ) {
    $votes = array();
    foreach ( $pictures as $p ) {
        $parts = explode(":", $p);
        $votes[ intval($parts[0]) ] = 0;
    }

    $res = db_query("SELECT cid, data FROM {webform_submitted_data} WHERE nid = %d ORDER BY sid", $form_nid);

    while( $row = db_fetch_object( $res ) ) {
        switch ( $row->cid ) {
            case 1: $points = 5; break;
            case 2: $points = 3; break;
            case 3: $points = 1; break;
        }
        $votes[ $row->data ] += $points;
    }
    $res = db_fetch_object(db_query("SELECT COUNT(DISTINCT sid) AS voters FROM {webform_submitted_data} WHERE nid = %d GROUP BY sid", $form_nid));

    $places = array();
    foreach ( $votes as $k=>$v ) {
        if ( !array_key_exists( $v, $places ) )
            $places[ $v ] = array();
        $places[ $v ][] = $k;
    }

    krsort( $places, SORT_NUMERIC );

    $places[-1] = $res->voters;

    return $places;
}

function afcontest_order_gallery_by_results( $node, $pictures, $votes ) {
    $place = 1;
    $winners = array();
    foreach ( $votes as $p => $ids ) {
        foreach ( $ids as $k=>$i ) {
            $picture = db_fetch_object(db_query("SELECT pid, caption FROM {gallerix_pictures} WHERE caption LIKE '%s' AND nid = %d", 
                str_pad( $i, 3, "0", STR_PAD_LEFT ).": %", $node->gallery
                ));
            $parts = explode( ":", $picture->caption );

            if ( count($ids) == 1 )
                $caption = $place.".";
            else
                $caption = $place.".-".($place+count($ids)-1).".";
            $caption .= " místo:".$parts[1]." (".$p." bodů)";
            $sortplace = strval($place+$k);
            $winners[] = $caption;

            db_query("UPDATE {gallerix_pictures} SET caption = '%s', sort = %d WHERE nid = %d AND pid = %d", 
                $caption, $sortplace, $node->gallery, $picture->pid );
        }
        $place += count( $ids );
    }
            
    $settings = serialize( array("sort"=>"custom") );
    db_query("UPDATE {gallerix_albums} SET settings = '%s'  WHERE nid = %d", $settings, $node->gallery );

    return $winners;
}

function afcontest_create_results_page( $node, $pictures, $voters_count, $winners ) {
  $winners_list = array();
  foreach ( $winners as $w ) {
      $winners_list[] = "<li>".$w."</li>";      
  }
  $winners_list = implode("\n",$winners_list);

  $n = array(
    'title' => $node->title." ".$node->year." - Výsledky",
    'language' => 'cs',
    'type' => 'page',
    'promote' => 0,
    'status' => 0,
    'comment' => 0,
    'format' => 3,
    'uid' => $node->uid,
    'body' => '<p>Do X. ročníku soutěže '.$node->title.' přišlo <strong>'.count($pictures).'</strong> fotek, o jejichž výsledném pořadí rozhodlo '.$voters_count.' hlasujících návštěvníků webu. 
    Děkujeme všem soutěžícím i hlasujícím a blahopřejeme vítězům!</p>
    <p>Výsledky jsou následující:</p>
    <ul>'.$winners_list.'</ul>    
    [[nid:'.$node->gallery.']]',
    'name' => $node->title,
    'path' => 'souteze/'.$node->slug.'/'.$node->year.'/vysledky' // vytvori alias, ale nezmeni vlastnost samotneho node-u
  );  
  if ( $n = node_submit( $n ) ) {
      $n->uid = $node->uid;
      node_save( $n );
      drupal_set_message("Vytvořena stránka ".$n->title.".");
  } else
      drupal_set_message("Node ".$n->title." added incorrectly", "error");

  return $n;
}

function afcontest_create_results( $node ) {
    // deactivate voting form
    db_query('UPDATE {webform} SET status = 0 WHERE nid = %d', $node->vote_form );

    // vytvorit stranku s vysledky, do ni vypsat vysledky a embednout galerii
    $pictures = afcontest_get_pictures( $node->gallery );
    $votes = afcontest_count_votes( $node->vote_form, $pictures );
    $voters_count = $votes[-1];
    unset( $votes[-1] );

    $winners = afcontest_order_gallery_by_results( $node, $pictures, $votes );
    $rnode = afcontest_create_results_page( $node, $pictures, $voters_count, $winners );

    db_query('UPDATE {afcontest} SET results_page = %d WHERE nid = %d', $rnode->nid, $node->nid);
    $node->results_page = $rnode->nid;
    return $node;
}



